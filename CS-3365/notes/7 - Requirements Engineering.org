* Requirements engineering (RE)
The process of establishing the services that a customer requires from a system and the constraints under which it operates and is developed.

Types of documentation:
- User requirements: Requirements for the general use. Natural language, diagrams, list of services, whatever. Overall, it is written for customers.
- System requirements: More detailed descriptions of the software system's functions, services, and operational constraints. Defines what should be implemented so may be part of a contract between client and contractor.

User requirement example:
- "The mentcair system shall generate monthly managment reports showing the cost of drugs perscribed by each clinic."

System requirement example:
- "1. last working day... 2. generate report on... 3. .... 4...."

Stakeholder types:
- End users
- System managers
- System owners
- External stakeholders

Types of functional requirements:
- Functional user requirements: Describe functionality (what the system should do.) High-level statements of what the system should do.
- Functional system reqirements: Describe the system services in detail.

Requirements imprecision:
- Problems arise when functional requirements are not percisely stated.
- Ambigous requirements may be interpreted in different ways by developers and users.

User intention is not always the developer's interpretation. What makes a good requoirement?
- Unambigous
- Clear
- Completeness (They should include descriptions of all facilities required.)
- Consistenty (There should be no conflicts or contradictions in the descriptions of the system facilities.)
- $\dots$



Non-functional requirementsL
- These define system properties and constraints (reliability, response time, storage)
- Constraints are I/O device capability, system representations, etc.
- Process reqirements may also be specified mandating a particular IDE, programming language, or development method.
- Non-functional requirements may be more critical than functional requirements.
- If these requirements are not met, the system may be useless.
